---
interface Props {
  Text: string;
  class?: string;
  id?: string; 
}

const { Text, class: additionalClasses, id } = Astro.props;
---

<button id={id} class={`boton-principal relative cursor-pointer font-semibold overflow-hidden z-10 border border-[#A3E784] group w-[175px] h-[44px] py-[10px] rounded-[5px] mt-3 self-center ${additionalClasses || ''}`}>
  <span class="relative z-10 text-black group-hover:text-black text-[18px] duration-500">{Text}</span>
  <span class="absolute w-full h-full bg-[#A3E784] -left-32 top-0 -rotate-45 group-hover:rotate-0 group-hover:left-0 duration-500"></span>
  <span class="absolute w-full h-full bg-[#A3E784] -right-32 top-0 -rotate-45 group-hover:rotate-0 group-hover:right-0 duration-500"></span>
</button>


<script>
  if (typeof window !== 'undefined') {
    function handleClick(event) {
      const button = event.target.closest('button.boton-principal');

      if (button) {
        document.querySelectorAll('button.boton-principal').forEach(button => {
          button.classList.remove('bg-[#A3E784]');
        });

        button.classList.add('bg-[#A3E784]');
      }
    }

    document.addEventListener('DOMContentLoaded', () => {
      document.querySelectorAll('button.boton-principal').forEach(button => {
        button.addEventListener('click', handleClick);
      });
    });
  }
</script>