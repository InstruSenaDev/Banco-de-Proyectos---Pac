---
interface Props {
  Text: string;
  class?: string;
  id?: string; 
}

const { Text, class: additionalClasses, id } = Astro.props;
---

<button id={id} class={`boton-principal relative cursor-pointer font-semibold overflow-hidden z-10 border border-[#A3E784] group w-[140px] h-[40px] py-[10px] rounded-[5px] mt-3 self-center ${additionalClasses || ''}`}>
  <span class="text-tremor-default font-medium text-tremor-content-strong dark:text-dark-tremor-content-strong">{Text}</span>
  <span class="absolute w-full h-full bg-[#A3E784] -left-32 top-0 -rotate-45 group-hover:rotate-0 group-hover:left-0 duration-500"></span>
  <span class="absolute w-full h-full bg-[#A3E784] -right-32 top-0 -rotate-45 group-hover:rotate-0 group-hover:right-0 duration-500"></span>
</button>


<script>
function handleClick(event) {
  const button = event.target.closest('button.boton-principal'); // Obtener el botón clicado de tipo BotonPrincipal

  if (button) {
    // Reiniciar la clase de fondo en todos los botones de tipo BotonPrincipal para quitar el efecto
    document.querySelectorAll('button.boton-principal').forEach(button => {
      button.classList.remove('bg-[#A3E784]');
    });

    // Añadir la clase de fondo al botón clicado para aplicar el efecto
    button.classList.add('bg-[#A3E784]');
  }
}

// Escuchar los clics en todos los botones dentro del contenedor adecuado (si es necesario)
document.addEventListener('DOMContentLoaded', () => {
  document.querySelectorAll('button.boton-principal').forEach(button => {
    button.addEventListener('click', handleClick);
  });
});
</script>
