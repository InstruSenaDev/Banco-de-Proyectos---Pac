---
import LayoutPrincipal from "../../layouts/LayoutPrincipal.astro";
import Card from "../../Components/Card.astro";
import Layoutcontenido from "../../layouts/Layoutcontenido.astro"
import BotonPrincipal from "../../Components/BotonPrincipal.astro";

const { id } = Astro.params;
const projectId = Astro.url.searchParams.get('projectId');

async function fetchTiposDeArea(idArea) {
  try {
    const response = await fetch(`http://localhost:4000/api/tipos-de-area/${idArea}`);
    if (!response.ok) {
      throw new Error(`Error fetching tipos de area: ${response.statusText}`);
    }
    return response.json();
  } catch (error) {
    console.error('Error fetching tipos de area:', error);
    return [];
  }
}

const tipos = id ? await fetchTiposDeArea(id) : [];

// Obtener todas las rutas posibles
export async function getStaticPaths() {
  try {
    const response = await fetch('http://localhost:4000/api/areas');
    if (!response.ok) {
      throw new Error('Error fetching areas: ' + response.statusText);
    }
    const areas = await response.json();

    return areas.map(area => ({
      params: { id: area.idarea.toString() },
      path: `/${area.idarea}` // Actualiza el formato de la ruta para que coincida con el formato de enlace
    }));
  } catch (error) {
    console.error('Error generating paths:', error);
    return [];
  }
}
---

<LayoutPrincipal title="">
  <Layoutcontenido title="">
    <div class="p-8">
      <h1 class="text-3xl font-bold font-josefin-slab">Tipos de Área</h1>
      <p class="text-lg font-josefin-slab">Por favor seleccione el tipo de área en la cual se centrará su proyecto</p>
    </div>

    <div class="flex justify-center">
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
        {tipos.length > 0 ? (
          tipos.map(tipo => (
            <div :key={tipo.idtiposdearea} class="card-container" data-tipo-id={tipo.idtiposdearea}>
              <a href="#" class="card-link">
                <Card Text={tipo.tiposdearea} />
              </a>
            </div>
          ))
        ) : (
          <p class="text-lg font-josefin-slab">No se encontraron tipos de área.</p>
        )}
      </div>
    </div>

    <div class="flex flex-col items-center sm:flex-row justify-end space-y-2 sm:space-y-0 sm:space-x-4 md:p-8">
      <a href={`/VistaAreas1?projectId=${projectId}`} class="flex flex-col items-center sm:flex-row justify-end space-y-2 sm:space-y-0 sm:space-x-4 md:pr-8">
        <BotonPrincipal Text="Volver" />
      </a>
    </div>
  </Layoutcontenido>
</LayoutPrincipal>

<script type="text/javascript">
  document.addEventListener('DOMContentLoaded', function() {
    // Obtener el ID del proyecto desde el atributo data-project-id del body
    const projectIdFromBody = document.body.dataset.projectId;

    document.querySelectorAll('.card-link').forEach(link => {
      link.addEventListener('click', async function(e) {
        e.preventDefault(); // Previene el comportamiento predeterminado del enlace

        // Obtener el ID del tipo desde el contenedor más cercano
        const tipoId = this.closest('.card-container').dataset.tipoId;

        // Obtener el ID del proyecto desde la URL
        const projectId = new URLSearchParams(window.location.search).get('projectId');

        // Verifica si ambos IDs están presentes
        if (tipoId && projectIdFromBody && projectId) {
          try {
            console.log('Enviando solicitud para actualizar el proyecto...');
            const response = await fetch('http://localhost:4000/api/update-proyecto', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify({ projectId, tipoId }),
            });

            if (!response.ok) {
              throw new Error('Error updating proyecto: ' + response.statusText);
            }

            const result = await response.json();
            console.log('Proyecto actualizado correctamente:', result);

            // Redirige a la ruta dinámica después de actualizar
            const redirectUrl = `/Services/${projectIdFromBody}-${tipoId}?projectId=${projectId}`;
            console.log('Redirigiendo a:', redirectUrl);
            window.location.href = redirectUrl;
          } catch (error) {
            console.error('Error al actualizar el proyecto:', error);
          }
        } else {
          console.error('Faltan ID del tipo o del proyecto.', { tipoId, id: projectIdFromBody, projectId });
        }
      });
    });
  });
</script>