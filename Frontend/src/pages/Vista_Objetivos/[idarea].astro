---
import LayoutPrincipal from "../../layouts/LayoutPrincipal.astro";
import BarraPreguntas from "../../Components/BarraPreguntas.astro";
import Grid from "../../Components/Grid.astro";
import BotonPrincipal from "../../Components/BotonPrincipal.astro";
import BotonSegundo from "../../Components/BotonSegundo.astro";

// Obtener idarea de los parámetros de la ruta
const { idarea } = Astro.params;

async function fetchObjetivos(idArea) {
  try {
    const response = await fetch(`http://localhost:4000/api/objetivos/${idArea}`);
    if (!response.ok) {
      throw new Error(`Error fetching objetivos: ${response.statusText}`);
    }
    return response.json();
  } catch (error) {
    console.error('Error fetching objetivos:', error);
    return [];
  }
}

const objetivos = idarea ? await fetchObjetivos(idarea) : [];

const groupedObjetivos = objetivos.reduce((acc, objetivo) => {
  if (!acc[objetivo.categoria]) {
    acc[objetivo.categoria] = [];
  }
  acc[objetivo.categoria].push(objetivo);
  return acc;
}, {} as Record<string, { idobjetivos: number; descripcion: string; categoria: string }[]>);

---
<LayoutPrincipal title={`Objetivos del Área ${idarea}`}>
  <div class="flex justify-center min-h-screen">
    <div class="p-10 w-full max-w-7xl my-10">
      <div class="flex flex-col">
        <div class="text-left mb-4">
          <h1 class="font-josefin-slab text-2xl text-black">Por favor marque “SI” o “NO” en cada pregunta</h1>
        </div>

        <div class="grid grid-cols-12 bg-[#A3E784] font-bold py-4 rounded-t-lg border-b">
          <div class="col-span-12 md:col-span-2 text-center md:text-left px-6">OBJETIVOS</div>
        </div>

        <div class="grid grid-cols-12 bg-green-50 font-semibold py-4 rounded-t-lg border-b">
          <div class="col-span-12 md:col-span-10 text-center md:text-left pl-4">Tipos de objetivos</div>
          <div class="hidden md:block col-span-1 text-center">Sí</div>
          <div class="hidden md:block col-span-1 text-center">No</div>
        </div>

        {Object.keys(groupedObjetivos).map((categoriaNombre) => (
          <>
            <div class="grid-cols-12 bg-green-50 md:col-span-10 pl-4 col-span-12 flex py-2">
              {categoriaNombre}
            </div>

            {groupedObjetivos[categoriaNombre].map((objetivo, index) => (
              <Grid 
                Text1={`${index + 1}. ${objetivo.descripcion}`}
                id1={`radioButton-grid${objetivo.idobjetivos}-si`}
                id2={`radioButton-grid${objetivo.idobjetivos}-no`}
                name={`pregunta${objetivo.idobjetivos}`}
              />
            ))}
          </>
        ))}

        <div class="flex flex-col items-center sm:flex-row justify-end space-y-2 sm:space-y-0 sm:space-x-4">
          <a href={`/vista-items/${idarea}`} class="flex flex-col items-center sm:flex-row justify-end space-y-2 sm:space-y-0 sm:space-x-4">
            <BotonPrincipal Text="Volver" />
          </a>
          <a href="/VistaAlcance" class="flex flex-col items-center sm:flex-row justify-end space-y-2 sm:space-y-0 sm:space-x-4">
            <BotonSegundo Text="Siguiente" />
          </a>
        </div>
      </div>
    </div>
  </div>
</LayoutPrincipal>