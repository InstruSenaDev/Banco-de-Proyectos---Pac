---
import Layoutprincipal from "../../layouts/Layoutprincipal.astro"
import Layoutcontenido2 from "../../layouts/Layoutcontenido2.astro"
import { ListProject } from "../../Components/ListProject";
import BotonPrincipal from "../../Components/BotonPrincipal.astro";
import BotonSegundo from "../../Components/BotonSegundo.astro";
import { ListItem } from "@tremor/react"


export const prerender = true;

// Obtén el parámetro `id` de la URL
const { id } = Astro.params;

// Define el objeto del proyecto con valores predeterminados
let proyecto = { 
    idproyecto: '',
    nombre: '',
    impacto: '', 
    responsable: '', 
    disponibilidad: '', 
    dia: '', 
    idalcance: '', 
    idobjetivos: '', 
    idarea: '', 
    idficha: '', 
    idpersona: '',
    idrespuestaalcance: '',
    iditems: '',
    idtiposdearea: '',
    idrespuestaobjetivos: '' 
};

// Función para obtener la información del proyecto desde la API
const fetchProyecto = async () => {
    try {
        const response = await fetch(`http://localhost:4000/api/proyectos/${id}`);
        if (response.ok) {
            proyecto = await response.json();
        } else {
            console.error('Error al obtener el proyecto:', response.statusText);
        }
    } catch (error) {
        console.error('Error de red al obtener el proyecto:', error);
    }
};

// Llamar a la función para obtener el proyecto
await fetchProyecto();

// Función para generar rutas estáticas
export async function getStaticPaths() {
    try {
        const response = await fetch('http://localhost:4000/api/proyectos');
        if (response.ok) {
            const proyectos = await response.json();
            // Genera un array de objetos para las rutas
            return proyectos.map(proyecto => ({
                params: { id: proyecto.idproyecto.toString() }
            }));
        } else {
            console.error('Error al obtener los proyectos para paths:', response.statusText);
            return [];
        }
    } catch (error) {
        console.error('Error de red al obtener proyectos para paths:', error);
        return [];
    }
}

---

<Layoutprincipal title="Detalle del proyecto">
    <Layoutcontenido2 title="" text1="Detalle del proyecto">
        <div class="lg:w-full w-full lg:h-auto ">
            <ListProject client:visible>
                <ListItem client:visible>
                    <span class="text-xs sm:text-xl">Nombre del proyecto</span>
                    <span class="sm:text-xl">{proyecto.nombre || 'No disponible'}</span>
                </ListItem>
                <ListItem client:visible>
                    <span class="text-xs sm:text-xl">Sector impactado</span>
                    <span class="text-xs sm:text-xl">{proyecto.impacto || 'No disponible'}</span>
                </ListItem>
                <ListItem client:visible>
                    <span class="text-xs sm:text-xl">Responsable</span>
                    <span class="text-xs sm:text-xl">{proyecto.responsable || 'No disponible'}</span>
                </ListItem>
                <ListItem client:visible>
                    <span class="text-xs sm:text-xl">Disponibilidad</span>
                    <span class="text-xs sm:text-xl">{proyecto.disponibilidad || 'No disponible'}</span>
                </ListItem>
                <ListItem client:visible>
                    <span class="text-xs sm:text-xl">Día</span>
                    <span class="text-xs sm:text-xl">{proyecto.dia || 'No disponible'}</span>
                </ListItem>
                <ListItem client:visible>
                    <span class="text-xs sm:text-xl">Alcance del proyecto</span>
                    <span class="text-xs sm:text-xl">{proyecto.idalcance || 'No disponible'}</span>
                </ListItem>
                <ListItem client:visible>
                    <span class="text-xs sm:text-xl">Objetivos</span>
                    <span class="text-xs sm:text-xl">{proyecto.idobjetivos || 'No disponible'}</span>
                </ListItem>
                <ListItem client:visible>
                    <span class="text-xs sm:text-xl">Área del proyecto</span>
                    <span class="text-xs sm:text-xl">{proyecto.idarea || 'No disponible'}</span>
                </ListItem>
                <ListItem client:visible>
                    <span class="text-xs sm:text-xl">Ficha</span>
                    <span class="text-xs sm:text-xl">{proyecto.idficha || 'No disponible'}</span>
                </ListItem>
                <ListItem client:visible>
                    <span class="text-xs sm:text-xl">Persona</span>
                    <span class="text-xs sm:text-xl">{proyecto.idpersona || 'No disponible'}</span>
                </ListItem>
                <ListItem client:visible>
                    <span class="text-xs sm:text-xl">Respuesta</span>
                    <span class="text-xs sm:text-xl">{proyecto.idrespuestaalcance || 'No disponible'}</span>
                </ListItem>
                <ListItem client:visible>
                    <span class="text-xs sm:text-xl">Items</span>
                    <span class="text-xs sm:text-xl">{proyecto.iditems || 'No disponible'}</span>
                </ListItem>
                <ListItem client:visible>
                    <span class="text-xs sm:text-xl">Tipo de área</span>
                    <span class="text-xs sm:text-xl">{proyecto.idtiposdearea || 'No disponible'}</span>
                </ListItem>
            </ListProject>
            <div class="flex flex-col items-center justify-end lg:justify-end lg:flex-row space-y-2 sm:space-y-0 sm:space-x-4 m-6 ">
                <a href="/Calificar"> 
                    <BotonPrincipal Text="Atras"/> 
                </a>

                <a href={`/servicios/${proyecto.idproyecto}`}>
                    <BotonSegundo Text="Siguiente" />
                </a>
            </div>
        </div>
    </Layoutcontenido2>
</Layoutprincipal>
